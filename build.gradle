/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'james' at '12/16/18 7:41 PM' with Gradle 2.11
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.11/userguide/tutorial_java_projects.html
 */
plugins {
  id "com.github.johnrengelman.shadow" version "4.0.3"
  id "java"
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.14'
    compile 'net.sf.kxml:kxml2:2.3.0'
    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    // https://mvnrepository.com/artifact/com.android/common
    compile group: 'com.android', name: 'common', version: 'r16'
    // https://mvnrepository.com/artifact/org.apache.velocity/velocity
    compile group: 'org.apache.velocity', name: 'velocity', version: '1.7'
    // https://mvnrepository.com/artifact/org.apache.velocity/velocity-tools
    compile group: 'org.apache.velocity', name: 'velocity-tools', version: '2.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.2'
    // https://mvnrepository.com/artifact/commons-lang/commons-lang
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'



    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile 'org.easymock:easymock:3.1'
}

jar {
    manifest {
        attributes 'Main-Class': 'InstrumentationPretty'
    }
}